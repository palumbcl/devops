name: Build and Push Docker Image
on:
  workflow_run:
    workflows: ["Test Backend"]
    types:
      - completed

jobs:
  build-and-push-docker-image:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v3
        with:
          context: ./tp-devops-correction-docker-main/simple-api
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-backend:latest
          push: true

      - name: Build and push database image
        uses: docker/build-push-action@v3
        with:
          context: ./tp-devops-correction-docker-main/database
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-db:latest
          push: true

      - name: Build and push HTTP image
        uses: docker/build-push-action@v3
        with:
          context: ./tp-devops-correction-docker-main/http-server
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-http:latest
          push: true
  # Job pour sonar
  build:
    name: Build and analyze
    # On utilise la dernière version d'ubuntu
    runs-on: ubuntu-latest
    # On définit les étapes à effectuer
    steps:
      # On commence par récupérer le code source
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 21
        # On utilise l'action setup-java pour installer la version 21 de java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "corretto" # Alternative distribution options are available.
      - name: Cache SonarQube packages
        # On utilise l'action cache pour stocker les packages de sonar
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        # On utilise l'action cache pour stocker les packages de maven
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        # On lance la commande maven pour construire le projet et lancer l'analyse sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=palumbcl_devops
        working-directory: tp-devops-correction-docker-main/simple-api
