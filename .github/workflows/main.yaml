# name: CI devops 2025
# on:
#   #to begin you want to launch this job in main
#   push:
#     branches: [main, develop]
#   pull_request:
#     types: [opened, synchronize, reopened]
# jobs:
#   test-backend:
#     runs-on: ubuntu-22.04
#     steps:
#       #checkout your github code using actions/checkout@v4
#       - uses: actions/checkout@v4

#       - name: Log in to GitHub Container Registry
#         run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

#       #do the same with another action (actions/setup-java@4) that enable to setup jdk 21
#       - name: Set up JDK 21
#         uses: actions/setup-java@v4
#         with:
#           distribution: "corretto"
#           java-version: "21"

#       #finally build your app with the latest command
#       - name: Build and test with Maven
#         run: mvn clean verify
#         working-directory: tp-devops-correction-docker-main/simple-api

#     # define job to build and publish docker image

#   build-and-push-docker-image:
#     needs: test-backend
#     # run only when code is compiling and tests are passing
#     runs-on: ubuntu-22.04

#     # steps to perform in job
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Login to Docker Hub # Log in to Docker Hub using credentials stored in secrets
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }} # Docker Hub username from secrets
#           password: ${{ secrets.DOCKERHUB_TOKEN }} # Docker Hub token from secrets

#       # Build and push the backend Docker image
#       - name: Build and push backend image
#         uses: docker/build-push-action@v3
#         with:
#           context: ./tp-devops-correction-docker-main/simple-api # Directory containing the backend code
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-backend:latest # Docker image tag
#           push: ${{ github.ref == 'refs/heads/main' }} # Push image only if commit is on the 'main' branch

#       # Build and push the database Docker image
#       - name: Build and push database image
#         uses: docker/build-push-action@v3
#         with:
#           context: ./tp-devops-correction-docker-main/database # Directory containing the database code
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-db:latest # Docker image tag
#           push: ${{ github.ref == 'refs/heads/main' }} # Push image only if commit is on the 'main' branch

#       # Build and push the HTTP Docker image
#       - name: Build and push httpd image
#         uses: docker/build-push-action@v3
#         with:
#           context: ./tp-devops-correction-docker-main/http-server # Directory containing the HTTP service code
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-http:latest # Docker image tag
#           push: ${{ github.ref == 'refs/heads/main' }} # Push image only if commit is on the 'main' branch

#   # Job pour sonar
#   build:
#     name: Build and analyze
#     # On utilise la dernière version d'ubuntu
#     runs-on: ubuntu-latest
#     # On définit les étapes à effectuer
#     steps:
#       # On commence par récupérer le code source
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
#       - name: Set up JDK 21
#         # On utilise l'action setup-java pour installer la version 21 de java
#         uses: actions/setup-java@v4
#         with:
#           java-version: 21
#           distribution: "corretto" # Alternative distribution options are available.
#       - name: Cache SonarQube packages
#         # On utilise l'action cache pour stocker les packages de sonar
#         uses: actions/cache@v4
#         with:
#           path: ~/.sonar/cache
#           key: ${{ runner.os }}-sonar
#           restore-keys: ${{ runner.os }}-sonar
#       - name: Cache Maven packages
#         # On utilise l'action cache pour stocker les packages de maven
#         uses: actions/cache@v4
#         with:
#           path: ~/.m2
#           key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#           restore-keys: ${{ runner.os }}-m2
#       - name: Build and analyze
#         # On lance la commande maven pour construire le projet et lancer l'analyse sonar
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=palumbcl_devops
#         working-directory: tp-devops-correction-docker-main/simple-api
